# @(#) a yummy and sweet tar library, meant to help
# @(#) dogfood the current state of carML
# @(#) copyright 2016-2018 Stefan Edwards, ISC licensed  

record tarheader {
    name:string
    mode:int
    ouid:int
    ogid:int
    size:int # packed as in octal
    mtime:string
    checksum:int # packed as octal
    linktype:int # should this be a sum?
    linkname:string
}

# I don't have specialization
# and the like working for parameterized
# types, so we'll use a monomorphic Either
# directly here
type BlockEither {
    Left string
    Right array[U8]
}

type TarEither {
    Left string
    Right TarHeader
}

# I dislike this right now; with the current
# compiler you *must* know you're returning
# a ref or not; I think that should be allowed
# of course, but I also think there will be a
# number of folks who *DO NOT* Need to know that
# implementation detail.
def readblock fh:FILE => BlockEither = {
    var res:array[U8] = (heap-allocate array[U8] 512)
    val status:int = (fread res (sizeof U8) 512 fh)

    match status with
        512 => (BlockEither.Right res)
        0 => (BlockEither.Left "end of file")
        else => (BlockEither.Left "malformed file")
    end
}

def readheader fh:FILE => TarEither = {
    val res:BlockEither = (readblock fh)
    match res with
        (BlockEither.Left _) => res
        (BlockEither.Right block) => (TarEither.Right $ parseheader block)
    end
}

def tar-int src:string => int = {
    0
}

def tar-octal-int src:string => int = {
    0
}

def parseheader block : array[512] of uint8 => tarheader = {
    val name:string = String.slice block 0 100
    val mode:int = tar-int $ String.slice block 100 108
    val ouid:int = tar-int $ String.slice block 108 116
    val ogid:int = tar-int $ String.slice block 116 124
    val size:int = tar-octal-int $ String.slice block 124 136
    val mtime:int = tar-octal-int $ String.slice block 136 148
    val checksum:int = tar-int $ String.slice block 148 156
    val linktype:int = tar-int $ String.slick block 156 157
    val linkname:string = String.slice block 157 258
    make-tarheader name mode ouid ogid size mtime checksum linktype linkname
}
